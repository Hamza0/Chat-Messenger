import java.io.*;
import java.net.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
public class client_modified implements Runnable, ActionListener {
private JFrame jfrm;
private JButton send_button;
private JTextField text_field;
private JTextField text_field1;
private JScrollPane scrolPane;
private JTextArea text_area;
private static Socket socket;
private static ObjectInputStream ois;
private static ObjectOutputStream oos;
String Name = "Client";
public client_modified()
{

jfrm = new JFrame("Client Messenger");
jfrm.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
jfrm.setLayout(new FlowLayout());
jfrm.setSize(500,620);
Thread thread = new Thread(this);
thread.start();
text_area = new JTextArea(30,30);
text_area.setEditable(false);
text_area.setLineWrap(true);
scrolPane = new JScrollPane(text_area);
text_field = new JTextField(15);
text_field1 = new JTextField(15);
text_field1.addActionListener(this);
text_field.addActionListener(this);
send_button = new JButton("Send");
send_button.addActionListener(this);
jfrm.getContentPane().add(text_field1);
jfrm.getContentPane().add(scrolPane);
jfrm.getContentPane().add(text_field);
jfrm.getContentPane().add(send_button);
jfrm.setVisible(true);

}


public void run()
{
try{

while(true)
{

Object input = ois.readObject();


text_area.setText((String)input +"\n");



}

}catch(Exception e)
{

}

}

public void actionPerformed(ActionEvent ae)
{
if(ae.getActionCommand().equals("Send") || ae.getSource() instanceof JTextField)
{
if(text_field1.getText().equals(null))
{

}
else
{
Name = text_field1.getText();
}
try{

oos.writeObject(text_area.getText() + Name + " says: " +text_field.getText()+"\n");
text_area.setText(text_area.getText() + Name +" says: " +text_field.getText()+"\n");


}catch(Exception e)
{

}
}

}




public static void makeSocket()
{
try {
//socket = new Socket("localhost", 4444);
oos = new ObjectOutputStream(socket.getOutputStream());
ois = new ObjectInputStream(socket.getInputStream());
} catch (UnknownHostException e) {
// TODO Auto-generated catch block

} catch (IOException e) {
// TODO Auto-generated catch block

}

}


public static void main(String [] args)
{   try {
socket = new Socket("localhost", 4444);
} catch (UnknownHostException e) {
// TODO Auto-generated catch block

} catch (IOException e) {
// TODO Auto-generated catch block

}
makeSocket();
SwingUtilities.invokeLater(new Runnable(){

public void run()
{
new client_modified();
}


});
}

}

